
- name : Provisionner le web server
  hosts: all
  become: yes 
  tasks:

  ############################   Affichage des informations de mon web-server    ############################
    - name: check connection
      ping: 

    - name: get group_vars (webservers)
      debug:
        msg: "Groupe de de serveur : {{server_group_name}} | Fournisseur cloud : {{cloud_provider}}"  

    - name: get host_vars (ubuntu@172.31.39.90)
      debug:
        msg: "type de serveur : {{server_type}}" 
        
        
############################   Gestion des utilisateur    ############################

    - name: create user mugen
      user: 
        name: mugen
        state: present 
        groups: sudo
        password: "{{ 'malyoun123' | password_hash('sha512') }}"
      register : user_mugen

    - name: debug user mugen
      debug:
        var: user_mugen

    - name: create a file for the user
      file:
        path: "/home/mugen/mugen.txt"
        state: touch
        owner: mugen
        group: root
        mode: 0755      
    
    - name: store the information of the file created
      stat:
        path: "/home/mugen/mugen.txt"
      register: mugen_file_metadata

    - name: check if the file exists
      debug:
        msg: "the file created by for user mugen exist : {{mugen_file_metadata.stat.exists}}"
    
    - name: create multiple directory and files <if file exist>
      file:
        path: "/home/mugen/{{item.mydir}}/{{item.myfile}}.txt"
        state: directory
        recurse: yes # définir de manière récursive les attributs de fichier spécifiés
      with_items: "{{ file_and_directory_dictonnary }}"
      when : mugen_file_metadata.stat.exists == true 

    - name: install tree in remote webserver
      apt:
        name: tree
        update_cache: yes
        cache_valid_time: 3600
        state: latest


############################   Gestion du reboot    ############################


    # - name: reboot remote webserver
    #   reboot:
    #     msg: "Reboot via ansible" # msg afficher avant le reboot
    #     connect_timeout: 5        # le temps pour se connecte sinon on echoue la tache
    #     reboot_timeout: 300       # le temps de reboot 
    #     pre_reboot_delay: 0       # le temps d'attente avant le reboot <seconde>
    #     post_reboot_delay: 30     # le temps d'attente pour continer nos taches apres le reboot <seconde>
    #     test_command: uptime      # verfie le succes du reboot

    # - name: message after reboot
    #   debug:
    #     msg: "Reboot success :)"

    # C'est a ce niveau que je peux pull et run un container qui se trouve sur un depot distant


  ############################   Gestion des images et container docker    ############################

    - name: get image name 
      debug:
        msg: "the latest version of the image in dockerhub : {{ image_cible }}"

    - name: "Delete privious image : {{ previous_image }} "
      shell: docker rmi -f {{ previous_image }}

    - name: "Delete previous container : {{ previous_container }}"
      shell: docker rm -f {{ previous_container }}

    - name: "Retrieve new image :  {{ image_cible }} "
      shell: docker pull {{ image_cible }}

    - name: "Run image and deploy container : {{ image_cible }} " 
      shell: docker run -d --name DrFanel-{{build_number}} -p 9090:80 {{image_cible}}


   ############################   Gestion de la clef SSH (secure shell)    ############################

    - name: Generate pair of keys ssh in the localhost
      openssh_keypair:
        path: /tmp/mugen_key
        type: rsa
        size: 4096
        state: present
        force: no            # me pas regenerer la clef si elle existe deja 
      delegate_to: localhost # executer cette tache au niveau du localhost(machiner courante)
      # run_one: yes           # executer cette tache une seule fois
    
    - name: Deploy ssh public key in remote web server
      authorized_key: 
        user: mugen
        key: " {{  lookup('file' , '/tmp/mugen_key.pub')  }} " # lookup va nous permettre de retrouver notre clef publique
        state: present 

  ############################   Provisionner le localhost avec la delegation    ############################

    - name: Create file in localhost
      file:
        path: /tmp/localhost_file.txt
        state: touch 
      delegate_to: localhost # on pourrait egalement deleguer cette tache a un serveur distant (172.31.39.90) 
      run_once: yes






    


    
          
        

        